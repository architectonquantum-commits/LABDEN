El usuario confirmó que este layout HTML funciona PERFECTAMENTE en móvil. Necesitas replicar exactamente esta estructura en React:
ESTRUCTURA EXACTA QUE FUNCIONA:
jsx// REEMPLAZA COMPLETAMENTE el contenido del return en Odontogram.tsx:

return (
  <Card data-testid="odontogram">
    <CardHeader>
      <div className="flex items-center justify-between">
        <CardTitle className="text-lg">Odontograma</CardTitle>
        <Button variant="outline" size="sm" onClick={handleClearAll}>
          <RotateCcw className="w-3 h-3 mr-1" />
          Limpiar
        </Button>
      </div>
    </CardHeader>
    <CardContent>
      {/* Instructions */}
      <div className="bg-muted/50 p-3 rounded-lg mb-6">
        <p className="text-xs sm:text-sm text-muted-foreground text-center">
          Haz clic en cualquier diente para seleccionar sus condiciones
        </p>
      </div>

      {/* Arcada Superior */}
      <div className="mb-6">
        <div className="text-center text-sm font-medium mb-2">Arcada Superior</div>
        
        {/* Fila 1: Dientes 18-11 */}
        <div className="grid grid-cols-8 gap-1 justify-items-center mb-3">
          {[18,17,16,15,14,13,12,11].map(num => (
            <ToothButton key={num} number={num} />
          ))}
        </div>
        
        {/* Fila 2: Dientes 21-28 */}
        <div className="grid grid-cols-8 gap-1 justify-items-center mb-6">
          {[21,22,23,24,25,26,27,28].map(num => (
            <ToothButton key={num} number={num} />
          ))}
        </div>
      </div>

      {/* Arcada Inferior */}
      <div className="mb-6">
        <div className="text-center text-sm font-medium mb-2">Arcada Inferior</div>
        
        {/* Fila 3: Dientes 48-41 */}
        <div className="grid grid-cols-8 gap-1 justify-items-center mb-3">
          {[48,47,46,45,44,43,42,41].map(num => (
            <ToothButton key={num} number={num} />
          ))}
        </div>
        
        {/* Fila 4: Dientes 31-38 */}
        <div className="grid grid-cols-8 gap-1 justify-items-center">
          {[31,32,33,34,35,36,37,38].map(num => (
            <ToothButton key={num} number={num} />
          ))}
        </div>
      </div>

      {/* Resto del código del modal y summary... */}
    </CardContent>
  </Card>
);

// Componente ToothButton separado:
const ToothButton = ({ number }) => {
  const toothConditions = selectedConditions[number] || [];
  const hasConditions = toothConditions.length > 0;
  
  return (
    <button 
      className="w-8 h-8 text-xs border-2 border-gray-300 rounded bg-white hover:bg-blue-50 flex items-center justify-center font-medium"
      style={{ 
        backgroundColor: hasConditions ? '#3b82f6' : '#ffffff',
        borderColor: hasConditions ? '#1d4ed8' : '#d1d5db',
        color: hasConditions ? '#ffffff' : '#374151'
      }}
      onClick={() => handleToothClick(number)}
    >
      {number}
    </button>
  );
};
PUNTOS CRÍTICOS:

4 divs separados con grid-cols-8
NO uses clases responsive problemáticas (xs:, sm:)
Tamaño fijo w-8 h-8 para todos los dientes
Margin bottom fijo entre secciones
Estructura simple sin contenedores complejos

VERIFICA que aparezcan exactamente 4 filas como en el HTML que funciona.